##uniform docker config
version: '3'

services:
  db_container_name:
    image: postgres
    restart: always
    container_name: db_container_name
    env_file:
      - {environment file location}
    ports:
      - 5435(exposed port on host):5432 (default port inside container)
    volumes:
      - pgdata(host docker secured volume location):/var/lib/postgresql/data (default location of db inside container)
    networks:
      - main

  backend_container_name:
    restart: always (restart policy)
    build:
      context: .
      dockerfile: ./docker/dev/Dockerfile (dockerfile location)
    # container_name: laundry_lite_backend (for multiple container name shouldn't be decalred)
    command: >
            sh -c "cd /app/backend &&
            python manage.py wait_for_db --settings=laundry_lite.dev_settings &&
            python manage.py migrate --settings=laundry_lite.dev_settings &&
            python manage.py runserver 0.0.0.0:8003 --settings=laundry_lite.dev_settings"
    volumes:
      - .:/app (non persistant volume declaration)
      - log:/app/backend/media/log (persistant volume declaration)
    # ports:
    #   - "8003:8003" (for multiple container port shouldn't be decalred)
    depends_on:
      - db_laundry_lite
    # hostname: laundry_lite_backend (for load balancing using hostname)
    networks:
      - main
    env_file:
      - ./.env/base.env
      - ./.env/dev.env


  nginx:
    restart: always
    image: nginx:latest
    volumes:
      - ./conf.d:/etc/nginx/conf.d
    depends_on:
      - db_laundry_lite
      - laundry_lite_backend
    ports:
      - 8003:8003
    networks:
      - main

(decalring specific network of a stack, preventing to connect with default bridge network for security)
networks:
  main:

(volumes must be declared here for persistant volume)
volumes:
  pgdata:
  log:




## Scale up command for multiple container


docker-compose up --build --scale {container name}=5 {no of container you want to sping up)
